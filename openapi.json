{
  "openapi": "3.0.0",
  "paths": {
    "/api/payments/buy": {
      "post": {
        "operationId": "PaymentsController_buySubscribe",
        "summary": "Buy subscribe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuySubscribeDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref:'": null
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/subscribe/self": {
      "get": {
        "operationId": "SubscribeController_getSelfSubscribe",
        "summary": "Get self subscribes",
        "parameters": [],
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribeResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Subscribe"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/subscribe/change-product": {
      "post": {
        "operationId": "SubscribeController_changeSubscribeProduct",
        "summary": "Change subscribe product",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSubscribeProductDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Subscribe"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/code/activate": {
      "post": {
        "operationId": "LicenseCodeController_activateCode",
        "summary": "Activate license code",
        "parameters": [
          {
            "name": "Origin",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLicenseCodeBodyDto"
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "If license code has already been activated or hold",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/LicenceCodeHasBeenActivatedError"
                    },
                    {
                      "$ref:'": null
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseCode"
                }
              }
            }
          }
        },
        "tags": [
          "Code"
        ]
      }
    },
    "/api/code/self": {
      "get": {
        "operationId": "LicenseCodeController_getSelfLicencesCodes",
        "summary": "Get self license codes",
        "parameters": [],
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref:'": null
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Code"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/code/manage": {
      "put": {
        "operationId": "LicenseCodeController_manageLicenseCodes",
        "summary": "Manage self license codes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageLicenseCodesDto"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "The number of specified codes does not match the available number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberOfAvailableCodesErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "If subscribe not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeNotFoundErrorDto"
                }
              }
            }
          },
          "409": {
            "description": "If not all codes apply to this subscription or Something went wrong with code management",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref: #/components/schemas/NotAllCodesApplyForSubscribeErrorDto": null,
                      "description": "If not all codes apply to this subscription"
                    },
                    {
                      "$ref": "#/components/schemas/ManageLicenseCodesErrorDto",
                      "description": "Something went wrong with code management"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref: #/components/schemas/LicenseCode": null
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Code"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/code/health": {
      "post": {
        "operationId": "LicenseCodeController_getLicenseCodeHealth",
        "summary": "Get license code health",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLicenseCodeBodyDto"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "If license code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundLicenseCode"
                }
              }
            }
          },
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref:'": null
                }
              }
            }
          }
        },
        "tags": [
          "Code"
        ]
      }
    },
    "/api/products": {
      "get": {
        "operationId": "ProductsController_getProducts",
        "summary": "Get products list",
        "parameters": [],
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/users/sign-in": {
      "post": {
        "operationId": "UsersController_signIn",
        "summary": "Sign in",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/sign-up": {
      "post": {
        "operationId": "UsersController_signUp",
        "summary": "Sign up",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users": {
      "patch": {
        "operationId": "UsersController_updatePersonalData",
        "summary": "Update personal data",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref:'": null
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/update-password": {
      "patch": {
        "operationId": "UsersController_updatePassword",
        "summary": "Update password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref:'": null
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "summary": "Get me",
        "parameters": [],
        "responses": {
          "default": {
            "description": null,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "G-score api",
    "description": "g-score",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "BuySubscribeDto": {
        "type": "object",
        "properties": {
          "priceId": {
            "type": "number",
            "nullable": false
          }
        },
        "required": [
          "priceId"
        ]
      },
      "Subscribe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "userId": {
            "type": "number",
            "nullable": false
          },
          "currentPeriodStart": {
            "type": "number",
            "nullable": true
          },
          "currentPeriodEnd": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "id",
          "userId",
          "currentPeriodStart",
          "currentPeriodEnd"
        ]
      },
      "BuySubscribeResponseDto": {
        "type": "object",
        "properties": {
          "subscribe": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Subscribe"
              }
            ]
          }
        },
        "required": [
          "subscribe"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {}
      },
      "PriceResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "productId": {
            "type": "number",
            "nullable": false
          },
          "product": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Product"
              }
            ]
          },
          "price": {
            "type": "string",
            "nullable": false,
            "example": 100
          }
        },
        "required": [
          "id",
          "isActive",
          "productId",
          "product",
          "price"
        ]
      },
      "ProductResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "sitesCount": {
            "type": "number",
            "nullable": false
          },
          "name": {
            "type": "number",
            "nullable": false
          },
          "prices": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceResponseDto"
            }
          }
        },
        "required": [
          "id",
          "sitesCount",
          "name",
          "prices"
        ]
      },
      "SubscribeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "userId": {
            "type": "number",
            "nullable": false
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponseDto"
              }
            ]
          },
          "productId": {
            "type": "number",
            "nullable": false
          },
          "product": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductResponseDto"
              }
            ]
          },
          "currentPeriodStart": {
            "type": "string",
            "nullable": true
          },
          "currentPeriodEnd": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "CANCELED"
            ]
          },
          "codes": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenceCodeResponseDto"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "user",
          "productId",
          "product",
          "currentPeriodStart",
          "currentPeriodEnd",
          "status",
          "codes"
        ]
      },
      "LicenceCodeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "code": {
            "type": "string",
            "nullable": false
          },
          "origin": {
            "type": "string",
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "HOLD"
            ],
            "nullable": false
          },
          "subscribeId": {
            "type": "number",
            "nullable": false
          },
          "subscribe": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscribeResponseDto"
              }
            ]
          },
          "userId": {
            "type": "number",
            "nullable": false
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponseDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "code",
          "origin",
          "status",
          "subscribeId",
          "subscribe",
          "userId",
          "user"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "email": {
            "type": "string",
            "nullable": false,
            "example": "examples@example.com"
          },
          "username": {
            "type": "string",
            "nullable": false,
            "example": "username"
          },
          "subscribes": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "codes": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenceCodeResponseDto"
            }
          }
        },
        "required": [
          "id",
          "email",
          "username",
          "subscribes",
          "codes"
        ]
      },
      "ChangeSubscribeProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "number",
            "nullable": false
          },
          "subscribeId": {
            "type": "number",
            "nullable": false
          }
        },
        "required": [
          "productId",
          "subscribeId"
        ]
      },
      "LicenceCodeHasBeenActivatedError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Code has already been activated"
          },
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "LicenceCodeIsHoldError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Hold code cannot be activated"
          },
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "NumberOfAvailableCodesErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Number of available codes 3"
          },
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "SubscribeNotFoundErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Subscribe not found"
          },
          "error": {
            "type": "string",
            "example": "Not Found"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "NotAllCodesApplyForSubscribeErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Not all codes apply to this subscription"
          },
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "ManageLicenseCodesErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Failed manage license codes"
          },
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "NotFoundLicenseCode": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Not found license code"
          },
          "error": {
            "type": "string",
            "example": "Not Found"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "ActivateLicenseCodeBodyDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "LicenseCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "code": {
            "type": "string",
            "nullable": false
          },
          "origin": {
            "type": "string",
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "HOLD"
            ],
            "nullable": false
          },
          "subscribeId": {
            "type": "number",
            "nullable": false
          },
          "subscribe": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Subscribe"
              }
            ]
          },
          "userId": {
            "type": "number",
            "nullable": false
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "id",
          "code",
          "origin",
          "status",
          "subscribeId",
          "subscribe",
          "userId",
          "user"
        ]
      },
      "ManageLicenseCodesDto": {
        "type": "object",
        "properties": {
          "codesIds": {
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "subscribeId": {
            "type": "number"
          }
        },
        "required": [
          "codesIds",
          "subscribeId"
        ]
      },
      "CodeHealthDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": false
          },
          "origin": {
            "type": "string",
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "HOLD"
            ],
            "nullable": false
          },
          "currentPeriodStart": {
            "type": "number",
            "nullable": true
          },
          "currentPeriodEnd": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "code",
          "origin",
          "status",
          "currentPeriodStart",
          "currentPeriodEnd"
        ]
      },
      "SignInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false,
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": false
          },
          "user": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponseDto"
              }
            ]
          }
        },
        "required": [
          "token",
          "user"
        ]
      },
      "SignUpDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@example.com"
          },
          "username": {
            "type": "string",
            "example": "Username"
          },
          "password": {
            "type": "string",
            "example": "qwerty"
          }
        },
        "required": [
          "email",
          "username",
          "password"
        ]
      },
      "SignUpResponseDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false
          },
          "username": {
            "type": "string",
            "nullable": false
          },
          "token": {
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "email",
          "username",
          "token"
        ]
      },
      "ChangePersonalDataDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false,
            "example": "example@example.com"
          },
          "username": {
            "type": "string",
            "nullable": false,
            "example": "Username"
          }
        },
        "required": [
          "email",
          "username"
        ]
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": false
          },
          "newPassword": {
            "type": "string",
            "nullable": false
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      }
    }
  }
}